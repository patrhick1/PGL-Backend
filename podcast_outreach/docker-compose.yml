version: '3.8'

services:
  web:
    build: .
    container_name: pgl-podcast-app
    ports:
      - "${PORT:-8000}:8000"
    env_file:
      - .env.docker
    environment:
      # The env_file will load all variables, we only need to override specific ones
      
      # All API keys will be loaded from env_file
      
      # Override Google credentials path for Docker
      - GOOGLE_APPLICATION_CREDENTIALS=/app/podcast_outreach/credentials/service-account-key.json
      
      # Application settings with defaults
      - IS_PRODUCTION=false
      - LOG_LEVEL=INFO
      
      # Worker settings
      - EPISODE_SYNC_MAX_CONCURRENT_TASKS=${EPISODE_SYNC_MAX_CONCURRENT_TASKS:-10}
      - GEMINI_TRANSCRIPTION_MAX_RETRIES=${GEMINI_TRANSCRIPTION_MAX_RETRIES:-3}
      - GEMINI_TRANSCRIPTION_RETRY_DELAY=${GEMINI_TRANSCRIPTION_RETRY_DELAY:-5}
      - GEMINI_API_CONCURRENCY=${GEMINI_API_CONCURRENCY:-10}
      - DOWNLOAD_CONCURRENCY=${DOWNLOAD_CONCURRENCY:-5}
      - TRANSCRIBER_MAX_EPISODES_PER_BATCH=${TRANSCRIBER_MAX_EPISODES_PER_BATCH:-20}
      
      # Python buffering
      - PYTHONUNBUFFERED=1
      
      # All other settings loaded from env_file
      
    volumes:
      # Mount local code for development - parent directory to maintain import structure
      - ../:/app
      # Mount static files
      - ./static:/app/podcast_outreach/static
      - ./templates:/app/podcast_outreach/templates
      # Mount Google credentials file securely (read-only)
      - ./credentials:/app/podcast_outreach/credentials:ro
    
    # Uncomment if you want to use a local Redis instance
    # depends_on:
    #   - redis
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api-status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Restart policy
    restart: unless-stopped
    
    # Network
    networks:
      - pgl-network

  # Optional: Add Redis for caching/sessions if needed
  # redis:
  #   image: redis:7-alpine
  #   container_name: pgl-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - pgl-network
  #   restart: unless-stopped

networks:
  pgl-network:
    driver: bridge

# volumes:
#   redis-data: